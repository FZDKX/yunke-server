<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzdkx.yunke.mapper.TRoleMapper">
    <resultMap id="BaseResultMap" type="com.fzdkx.yunke.bean.dao.TRole">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, `role`, role_name
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserId" resultType="com.fzdkx.yunke.bean.dao.TRole">
        select tr.*
        from t_role tr
                 left join t_user_role tur on tur.role_id = tr.id
        where tur.user_id = #{userId}
    </select>
    <select id="selectList" resultType="com.fzdkx.yunke.bean.dao.TRole">
        select
        <include refid="Base_Column_List"/>
        from t_role
    </select>
    <select id="selectRolePerm" resultType="com.fzdkx.yunke.bean.query.PermissionQuery">
        # 查询某个角色的所有权限
        SELECT tp.id,
               tp.parent_id,
               tp.`name`
        FROM t_role_permission trp
                 LEFT JOIN t_permission tp ON trp.permission_id = tp.id
        WHERE trp.role_id = #{id}

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="batchDelete" parameterType="java.lang.Integer">
        delete
        from t_role
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fzdkx.yunke.bean.dao.TRole"
            useGeneratedKeys="true">
        insert into t_role (`role`, role_name)
        values (#{role,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fzdkx.yunke.bean.dao.TRole"
            useGeneratedKeys="true">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="role != null">
                `role`,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fzdkx.yunke.bean.dao.TRole">
        update t_role
        <set>
            <if test="role != null">
                `role` = #{role,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fzdkx.yunke.bean.dao.TRole">
        update t_role
        set `role`    = #{role,jdbcType=VARCHAR},
            role_name = #{roleName,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>